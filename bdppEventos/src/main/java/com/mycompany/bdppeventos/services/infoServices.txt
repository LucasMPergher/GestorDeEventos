Descripción: Lógica de negocio de la aplicación
Patrón: Service Layer

Qué va aquí:
- Validaciones de negocio
- Operaciones complejas
- Coordinación entre múltiples DAOs
- Lógica que NO es de base de datos

Ejemplo - EventoService.java:
```java
public class EventoService {
    private EventoDAO eventoDAO;
    private ParticipanteDAO participanteDAO;
    
    public EventoService() {
        EntityManagerFactory emf = EntityManagerUtil.getEntityManagerFactory();
        this.eventoDAO = new EventoJpaController(emf);
        this.participanteDAO = new ParticipanteJpaController(emf);
    }
    
    // Lógica de negocio
    public void crearEvento(Evento evento) throws Exception {
        // Validaciones
        if (evento.getFecha().before(new Date())) {
            throw new Exception("No se pueden crear eventos en el pasado");
        }
        
        if (evento.getCapacidadMaxima() < 10) {
            throw new Exception("La capacidad mínima es 10 personas");
        }
        
        // Guardar
        eventoDAO.crear(evento);
    }
    
    public void inscribirParticipante(Long eventoId, Long participanteId) throws Exception {
        Evento evento = eventoDAO.buscarPorId(eventoId);
        
        // Validar cupo
        if (evento.getParticipantes().size() >= evento.getCapacidadMaxima()) {
            throw new Exception("El evento está lleno");
        }
        
        // Inscribir
        Participante participante = participanteDAO.buscarPorId(participanteId);
        evento.getParticipantes().add(participante);
        eventoDAO.actualizar(evento);
    }
    
    public List<Evento> obtenerEventosDisponibles() {
        return eventoDAO.buscarActivos()
            .stream()
            .filter(e -> e.getFecha().after(new Date()))
            .filter(e -> e.getParticipantes().size() < e.getCapacidadMaxima())
            .collect(Collectors.toList());
    }
}
```

Archivos típicos:
- EventoService.java
- ParticipanteService.java
- InscripcionService.java
- ReporteService.java
- NotificacionService.java