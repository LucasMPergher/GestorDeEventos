Descripción: Clases de utilidad y helpers
Propósito: Código reutilizable que no encaja en otras capas

Qué va aquí:
- Utilidades generales
- Helpers
- Constantes
- Configuraciones
- Validadores

Ejemplo - EntityManagerUtil.java:
```java
public class EntityManagerUtil {
    private static final EntityManagerFactory emf;
    
    static {
        emf = Persistence.createEntityManagerFactory("EventosPU");
    }
    
    public static EntityManagerFactory getEntityManagerFactory() {
        return emf;
    }
    
    public static void shutdown() {
        if (emf != null && emf.isOpen()) {
            emf.close();
        }
    }
}
```

Ejemplo - ValidationHelper.java:
```java
public class ValidationHelper {
    
    public static boolean isValidEmail(String email) {
        String regex = "^[A-Za-z0-9+_.-]+@(.+)$";
        return email.matches(regex);
    }
    
    public static boolean isValidDNI(String dni) {
        return dni != null && dni.matches("\\d{8}");
    }
    
    public static boolean isFutureDate(LocalDate date) {
        return date != null && date.isAfter(LocalDate.now());
    }
    
    public static void validateNotEmpty(String value, String fieldName) throws ValidationException {
        if (value == null || value.trim().isEmpty()) {
            throw new ValidationException(fieldName + " no puede estar vacío");
        }
    }
}
```

Archivos típicos:
- EntityManagerUtil.java (gestión de JPA)
- ViewLoader.java (carga de vistas FXML)
- AlertHelper.java (mostrar alertas)
- ValidationHelper.java (validaciones comunes)
- DateUtil.java (formato de fechas)
- Constants.java (constantes de la app)
- ConfigUtil.java (lectura de configuración)